version: "3.9"

services:
  backend:
    build:
      context: ./back
    container_name: backend-go-app
    env_file: ./back/.env
    ports:
      - "8000:8000"
    volumes:
      - ./back/uploads:/app/uploads
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - PA

  frontend:
    build:
      context: ./front
    container_name: frontend-vue-app
    ports:
      - "3000:5173"
    environment:
      - FRONT_BACKEND=http://localhost:8000 
    depends_on:
      - backend
    networks:
      - PA

  postgres:
    image: postgres:bookworm
    restart: always
    container_name: backend-go-db
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - PA

volumes:
  pg-data:

networks:
  PA:
    driver: bridge
